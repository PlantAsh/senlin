<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
 	default-autowire="byName" default-lazy-init="true">

	<!-- 使用 annotation -->
	<context:annotation-config />
   	<!-- 使用 annotation 自动注册bean,并检查@Controller, @Service, @Repository注解已被注入 --> 
	<context:component-scan base-package="cn.edu.zucc.senlin" />

	<!-- 数据库配置 -->
	<bean id="dbConect"
		class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass"
			value="com.mysql.jdbc.Driver">
		</property>
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/senlin?useUnicode=true&amp;characterEncoding=UTF-8">
		</property>
		<property name="user" value="root"></property>
		<property name="password" value="123456"></property>
		
		<property name="minPoolSize" value="20"/>
		<property name="maxPoolSize" value="100"/>
		<property name="maxIdleTime" value="10"/>
		<property name="acquireIncrement" value="5"/>
		<property name="maxStatements" value="0"/>
		<property name="initialPoolSize" value="20"/>
		<property name="idleConnectionTestPeriod" value="10"/>
	</bean>
	
	<!-- sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dbConect" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!-- 可以自动创建数据库表(create),不创建(none) -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 包扫描的方式加载注解类(推荐) -->
		<property name="packagesToScan">
			<list>
				<value>cn.edu.zucc.senlin.model</value>
			</list>
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*"/>
			<tx:method name="delete*"/>
			<tx:method name="update*"/>
			
			<tx:method name="find*" propagation="SUPPORTS"/>
			<tx:method name="load*" propagation="SUPPORTS"/>
			<tx:method name="get*" propagation="SUPPORTS"/>
			<tx:method name="*" propagation="SUPPORTS"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 哪些类的哪些方法参与事务 -->
	<aop:config>
		<aop:advisor pointcut="execution(* cn.edu.zucc.senlin.service.*.*.*(..))" advice-ref="txAdvice"/>
		<aop:advisor pointcut="execution(* cn.edu.zucc.senlin.service.*.*(..))" advice-ref="txAdvice"/>
	</aop:config>

	<!-- 用注解来实现事务管理 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- <bean id="userManage" class="cn.edu.zucc.senlin.action.UserManage" scope="prototype">
	    <property name="userDAO" ref="userDAO"></property>
	</bean> -->
	
	<!-- <bean id="userDAO" class="cn.edu.zucc.senlin.dao.UserDAO">
	</bean> -->
	
	<!-- <bean id="baseDAO" class="cn.edu.zucc.senlin.dao.BaseDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>
	</bean> -->
			
</beans>